name: Release E-Bill installers

# Trigger the workflow manually
on: 
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for the release (e.g. 0.2.0)'
        required: true
      be_tag:
        description: 'Tag of the commit in the E-Bill repo (e.g. v0.2.0)'
        required: true
      fe_tag:
        description: 'Tag of the commit in the E-Bill Frontend repo (e.g. v0.2.0)'
        required: true
      builder_ver:
        description: 'Version of the InstallBuilder Professional (e.g. 24.11.1)'
        default: '24.11.1'
        required: false

jobs:
  build:
    strategy:
      matrix:
        config: 
          - os: windows-latest
            pck: |
              choco install protoc openssl -y
              echo "OPENSSL_DIR=C:\Program Files\OpenSSL" >> $GITHUB_ENV
              echo "OPENSSL_LIB_DIR=C:\Program Files\OpenSSL\lib\VC\x64\MD" >> $GITHUB_ENV
            installer: 
                ver: windows-x64-installer.exe
                target: windows-x64
                exec: c:/Program Files/InstallBuilder Professional ${{ github.event.inputs.builder_ver }}/bin/builder-cli.exe
          - os: macos-latest
            pck: brew install protobuf
            installer: 
                ver: osx-installer.dmg
                target: osx
                exec: /Applications/InstallBuilder Professional ${{ github.event.inputs.builder_ver }}/bin/builder
    
    name: Build installer for ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    env:
      version: ${{ github.event.inputs.version }}
    steps:
      - name: Checkout FE repo
        uses: actions/checkout@v4
        with:
            repository: BitcreditProtocol/E-Bill-frontend
            ref: ${{ github.event.inputs.fe_tag }}
            token: ${{ secrets.FE_REPO_ACCESS_PAT }}
            path: fe
      
      - name: Prepare FE for PROD
        run: |
          cat > .env.production << EOF
          VITE_API_BASE_URL=%BITCR_BE_URL%
          EOF
        working-directory: ./fe

      - name: Build FE
        run: |
            rm -f package-lock.json
            npm install
            NODE_ENV=production npm run build
        working-directory: ./fe
      
      - name: Checkout BE repo
        uses: actions/checkout@v4
        with:
            path: be
            ref: ${{ github.event.inputs.be_tag }}
    
      - name: Install BE dependencies
        run: |
          ${{ matrix.config.pck }}

      - name: Build BE         
        run: cargo build --features embedded-db --release
        working-directory: ./be

      - name: Install InstallBuilder
        if: matrix.config.os == 'windows-latest'
        run: |
            curl -L -o installbuilder-${{ matrix.config.installer.ver }} https://releases.installbuilder.com/installbuilder/installbuilder-professional-${{ github.event.inputs.builder_ver }}-${{ matrix.config.installer.ver }}
            ./installbuilder-${{ matrix.config.installer.ver }} --mode unattended
        
      - name: Install InstallBuilder
        if: matrix.config.os == 'macos-latest'
        run: |
            dmgFilePath='installbuilder-${{ matrix.config.installer.ver }}'
            curl -L -o $dmgFilePath https://releases.installbuilder.com/installbuilder/installbuilder-professional-${{ github.event.inputs.builder_ver }}-${{ matrix.config.installer.ver }}
            
            MOUNTDEV=$(hdiutil mount $dmgFilePath | awk '/dev.disk/{print$1}')
            MOUNTDIR="$(mount | grep $MOUNTDEV | awk '{$1=$2="";sub(" [(].*","");sub("^  ","");print}')"            
            cd "$MOUNTDIR/installbuilder-professional-${{ github.event.inputs.builder_ver }}-osx-installer.app/Contents/MacOS"

            ./installbuilder.sh --mode unattended

      - name: Build installer
        run: |
            "${{ matrix.config.installer.exec }}" build spec.xml ${{ matrix.config.installer.target }} --setvars fesourcedir="${{ github.workspace }}/fe/dist" besourcedir="${{ github.workspace }}/be/target/release" version=${{ env.version }}
        working-directory: ./be/.github/workflows/wizard

      - name: Upload BE artifacts
        uses: actions/upload-artifact@v4
        with:
            name: bitcreditcore-${{ env.version }}-${{ matrix.config.installer.ver }}
            path: ./be/.github/workflows/wizard/bitcreditcore-${{ env.version }}-${{ matrix.config.installer.ver }}