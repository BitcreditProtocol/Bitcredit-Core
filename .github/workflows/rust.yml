name: Rust CI

on:
  push:
    branches: [ "**" ]

permissions:
  contents: read
  security-events: write

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: "true"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create Github App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.PRIVATE_REPO_ACCESS_APP_ID }}
          private-key: ${{ secrets.PRIVATE_REPO_ACCESS_APP_PRIVATE_KEY }}
      
      - name: Git auth with app token
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git config --global url."https://x-access-token:${GH_TOKEN}@github.com/".insteadOf "https://github.com/"

      - name: Free up disk space
        run: |
          echo "Before cleanup:"
          df -h
          docker system prune -a -f
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo apt-get clean
          sudo apt-get autoremove -y
          echo "After cleanup:"
          df -h

      - name: Switch rust version
        run: rustup default stable

      - name: Update rust
        run: rustup update

      - name: Cargo update
        run: cargo update --verbose

      - name: Check
        run: cargo check --verbose

      - name: Add fmt
        run: rustup component add rustfmt

      - name: Add cargo deny
        run: cargo install cargo-deny

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Test
        run: cargo test
        continue-on-error: true

      - name: Build
        run: cargo build --verbose

      - name: Install wasm-pack
        run: |
          curl https://drager.github.io/wasm-pack/installer/init.sh -sSf | bash

      - name: Build WASM version
        run: |
          cd crates/bcr-ebill-wasm
          wasm-pack build --target web

      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Add clippy
        run: rustup component add clippy

      - name: Clippy
        run:
          cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Cargo deny
        run: cargo deny check
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true
